@model ServiceOrderUpdateDTO

@{
    ViewData["Title"] = "Editando Ordem de Serviço";
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const inputVehicle = document.getElementById("vehicleSearch");
            const hiddenVehicle = document.getElementById("VehicleID");

            inputVehicle.value = "@Model.Vehicle?.Plate - @Model.Vehicle?.Type";
            hiddenVehicle.value = "@Model.VehicleID";

            // Atualiza total com os itens já existentes
            updateTotalProductValue();
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Se já tem um valor vindo do back, você não precisa recalcular
            const total = document.getElementById("TotalProductValue").value;
            document.getElementById("displayTotalProductValue").textContent = total;
        });
    </script>
}


<h2>Editando Ordem de Serviço</h2>

<form asp-controller="ServiceOrders" asp-action="Edit" method="post">
    <div class="mb-3">
        <label asp-for="ServiceDate" class="form-label">Data do serviço</label>
        <input asp-for="ServiceDate" class="form-control" type="date" />
        <span asp-validation-for="ServiceDate" class="text-danger"></span>
    </div>

    <div class="mb-3 position-relative">
        <label for="vehicleSearch" class="form-label">Veículo</label>
        <input id="vehicleSearch" type="text" class="form-control" placeholder="Buscar por placa" autocomplete="off" />

        <input type="hidden" name="VehicleID" id="VehicleID" />

        <div id="vehicleResults" class="list-group position-absolute w-100" style="z-index: 1000;"></div>
    </div>

    <div class="mb-3">
        <label asp-for="TotalLabor" class="form-label">Mão de obra</label>
        <input asp-for="TotalLabor" class="form-control" type="number" />
        <span asp-validation-for="TotalLabor" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Description" class="form-label">Descrição do serviço</label>
        <input asp-for="Description" class="form-control" type="text" />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <hr />
    <h4>Itens do Serviço</h4>

    <!-- Botão que abre o modal -->
    <button type="button" class="btn btn-outline-primary mb-2" data-bs-toggle="modal" data-bs-target="#addItemModal">
        + Adicionar Item
    </button>

    <!-- Caixa com scroll para itens adicionados -->
    <div id="itemsContainer" class="border p-3 rounded bg-light" style="max-height: 200px; overflow-y: auto;">
        <!-- ITENS EXISTENTES -->
        @for (int i = 0; i < Model.ServiceItems.Count; i++)
        {
            var item = Model.ServiceItems[i];
            <div class="d-flex justify-content-between align-items-center border-bottom py-2">
                <div>
                    <strong>@item.Item?.Description</strong><br />
                    Quantidade: @item.Quantity, Valor: R$ @item.UnitValue.ToString("0.00")
                </div>
                <div>
                    <button type="button" class="btn btn-sm btn-danger" onclick="removeItem(this)">Remover</button>
                </div>
                <input type="hidden" name="ServiceItems[@i].ItemID" value="@item.Item?.ID" />
                <input type="hidden" name="ServiceItems[@i].Quantity" value="@item.Quantity" />
                <input type="hidden" name="ServiceItems[@i].UnitValue" value="@item.UnitValue" />
            </div>
        }
    </div>

    <br />

    <div class="mt-2">
        <strong>Total de produtos:</strong>
        R$ <span id="displayTotalProductValue">@Model.TotalProductValue.ToString("0.00")</span>
    </div>
    <input type="hidden" id="TotalProductValue" name="TotalProductValue" value="@Model.TotalProductValue.ToString("0.00")">
    <br /><br />

    <button type="submit" class="btn btn-success">Salvar</button>
    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
</form>

<!-- Modal de Adicionar Item -->
<div class="modal fade" id="addItemModal" tabindex="-1" aria-labelledby="addItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="itemForm" onsubmit="submitItem(event)">
                <div class="modal-header">
                    <h5 class="modal-title" id="addItemModalLabel">Adicionar Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                </div>
                <div class="modal-body">

                    <div class="mb-3 position-relative">
                        <label for="modalItemSearch" class="form-label">Item</label>
                        <input id="modalItemSearch" type="text" class="form-control" placeholder="Buscar item" autocomplete="off" />
                        <input type="hidden" id="modalItemID" />
                        <div id="modalItemResults" class="list-group position-absolute w-100" style="z-index: 1000;"></div>
                    </div>

                    <div class="mb-3">
                        <label for="modalQuantity" class="form-label">Quantidade</label>
                        <input id="modalQuantity" type="number" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="modalUnitValue" class="form-label">Valor Unitário</label>
                        <input id="modalUnitValue" type="number" step="0.01" class="form-control" required />
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Adicionar</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    const input = document.getElementById("vehicleSearch");
    const resultsDiv = document.getElementById("vehicleResults");
    const hiddenInput = document.getElementById("VehicleID");

    input.addEventListener("keydown", function (e) {
        if (e.key === "Enter") {
            e.preventDefault();

            const termo = input.value.trim();
            if (!termo) return;

            fetch(`/api/Vehicles/searchByPlate?searchString=${encodeURIComponent(termo)}`)
                .then(res => res.json())
                .then(data => {
                    resultsDiv.innerHTML = "";
                    if (data.length === 0) {
                        const noResult = document.createElement("div");
                        noResult.className = "list-group-item list-group-item-secondary";
                        noResult.textContent = "Nenhum veículo encontrado";
                        resultsDiv.appendChild(noResult);
                        return;
                    }

                    data.forEach(v => {
                        const item = document.createElement("button");
                        item.type = "button";
                        item.className = "list-group-item list-group-item-action";
                        item.textContent = `${v.plate} - ${v.type}`;
                        item.addEventListener("click", () => {
                            input.value = `${v.plate} - ${v.type}`;
                            hiddenInput.value = v.id;
                            resultsDiv.innerHTML = "";
                        });
                        resultsDiv.appendChild(item);
                    });
                })
                .catch(err => {
                    console.error(err);
                    resultsDiv.innerHTML = "";
                });
        }
    });

    document.addEventListener("click", function (e) {
        if (!input.contains(e.target) && !resultsDiv.contains(e.target)) {
            resultsDiv.innerHTML = "";
        }
    });
</script>
<script>
    let itemIndex = @Model.ServiceItems.Count;
    let addedItems = [];

    @foreach (var item in Model.ServiceItems)
    {
        <text>addedItems.push("@item.Item?.ID");</text>
    }

    function updateTotalProductValue() {
        let total = 0;

        const unitInputs = document.querySelectorAll("input[name$='.UnitValue']");
        const qtyInputs = document.querySelectorAll("input[name$='.Quantity']");

        for (let i = 0; i < unitInputs.length; i++) {
            const unit = parseFloat(unitInputs[i].value);
            const qty = parseFloat(qtyInputs[i].value);

            if (!isNaN(unit) && !isNaN(qty)) {
                total += unit * qty;
            }
        }

        const totalFixed = total.toFixed(2);
        document.getElementById("TotalProductValue").value = totalFixed;
        document.getElementById("displayTotalProductValue").textContent = totalFixed;
    }

    function removeItem(button) {
        const itemDiv = button.parentElement.parentElement;
        const idInput = itemDiv.querySelector("input[name$='.ItemID']");
        const itemId = idInput.value;

        addedItems = addedItems.filter(id => id !== itemId);
        itemDiv.remove();

        updateTotalProductValue();
    }

    document.getElementById("modalItemSearch").addEventListener("keydown", function (e) {
        if (e.key === "Enter") {
            e.preventDefault();

            const termo = this.value.trim();
            const resultsDiv = document.getElementById("modalItemResults");
            const hiddenInput = document.getElementById("modalItemID");

            fetch(`/api/Stocks/searchByDesc?searchString=${encodeURIComponent(termo)}`)
                .then(res => res.json())
                .then(data => {
                    resultsDiv.innerHTML = "";

                    if (data.length === 0) {
                        const noResult = document.createElement("div");
                        noResult.className = "list-group-item list-group-item-secondary";
                        noResult.textContent = "Nenhum item encontrado";
                        resultsDiv.appendChild(noResult);
                        return;
                    }

                    data.forEach(item => {
                        const btn = document.createElement("button");
                        btn.type = "button";
                        btn.className = "list-group-item list-group-item-action";
                        btn.textContent = item.description;
                        btn.addEventListener("click", () => {
                            document.getElementById("modalItemSearch").value = item.description;
                            hiddenInput.value = item.id;
                            resultsDiv.innerHTML = "";
                        });
                        resultsDiv.appendChild(btn);
                    });
                });
        }
    });

    document.addEventListener("click", function (e) {
        const resDiv = document.getElementById("modalItemResults");
        const input = document.getElementById("modalItemSearch");
        if (!resDiv.contains(e.target) && e.target !== input) {
            resDiv.innerHTML = "";
        }
    });

    function submitItem(e) {
        e.preventDefault();

        const id = document.getElementById("modalItemID").value;
        const desc = document.getElementById("modalItemSearch").value;
        const qtd = document.getElementById("modalQuantity").value;
        const valor = document.getElementById("modalUnitValue").value;

        if (!id || !desc || !qtd || !valor) {
            alert("Preencha todos os campos.");
            return;
        }

        if (addedItems.includes(id)) {
            alert("Este item já foi adicionado!");
            return;
        }

        addedItems.push(id);

        const container = document.getElementById("itemsContainer");

        const itemDiv = document.createElement("div");
        itemDiv.className = "d-flex justify-content-between align-items-center border-bottom py-2";

        itemDiv.innerHTML = `
            <div>
                <strong>${desc}</strong><br/>
                Quantidade: ${qtd}, Valor: R$ ${parseFloat(valor).toFixed(2)}
            </div>
            <div>
                <button type="button" class="btn btn-sm btn-danger" onclick="removeItem(this)">Remover</button>
            </div>
            <input type="hidden" name="ServiceItems[${itemIndex}].ItemID" value="${id}" />
            <input type="hidden" name="ServiceItems[${itemIndex}].Quantity" value="${qtd}" />
            <input type="hidden" name="ServiceItems[${itemIndex}].UnitValue" value="${valor}" />
        `;

        container.appendChild(itemDiv);
        itemIndex++;

        // Resetar o modal
        document.getElementById("itemForm").reset();
        document.getElementById("modalItemResults").innerHTML = "";

        updateTotalProductValue();

        // Fechar o modal
        const modal = bootstrap.Modal.getInstance(document.getElementById("addItemModal"));
        modal.hide();
    }
</script>